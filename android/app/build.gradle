plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' // 如果使用 Kotlin
    // id 'com.google.gms.google-services' // 如果使用 Google 服务
}

// Load local.properties file
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
} else {
    throw new GradleException("local.properties file not found. Please create it at: ${localPropertiesFile.path}")
}

// Define flutterRoot
def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 34

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
    applicationId "com.example.flutter_app1"
    minSdkVersion 21 // 确保这个值不高于目标设备的 Android 版本
    targetSdkVersion 34
    versionCode localProperties.getProperty('flutter.versionCode').toInteger()
    versionName localProperties.getProperty('flutter.versionName')
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
}

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            v1SigningEnabled true  //打包时默认勾选 V1（Jar Signature）
            v2SigningEnabled true  //打包时默认勾选 V2（Full APK Signature）
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    namespace 'com.example.flutter_app1' // 确保添加了这一行
}
